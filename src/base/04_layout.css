/* Layout */

@property --mnml--spacing {
  syntax: "<length>";
  inherits: true;
  initial-value: 1rem;
}

@property --mnml--container--max-inline-size {
  syntax: "<length>";
  inherits: true;
  initial-value: 75rem;
}

@property --mnml--container--padding-inline {
  syntax: "<length>";
  inherits: true;
  initial-value: 1rem;
}

@property --mnml--grid--column-gap {
  syntax: "<length>";
  inherits: true;
  initial-value: 1rem;
}

@property --mnml--grid--row-gap {
  syntax: "<length>";
  inherits: true;
  initial-value: 1rem;
}

@property --mnml--grid--column--min-inline-size {
  syntax: "<length>";
  inherits: true;
  initial-value: 12.5rem;
}

@property --mnml--grid--row--block-size {
  syntax: "<length>" | "auto";
  inherits: true;
  initial-value: auto;
}

:where(:root, :host) {
  --mnml--spacing--double: calc(var(--mnml--spacing) * 2);
  --mnml--spacing--half: calc(var(--mnml--spacing) / 2);
  --mnml--container--padding-inline: var(--mnml--spacing);
}

.container {
  margin-inline: auto;
  max-inline-size: var(--mnml--container--max-inline-size);
  padding-inline: var(--mnml--container--padding-inline);
}

/* https://css-tricks.com/full-bleed/ */
.container--grid {
  display: grid;
  grid-template-columns:
    1fr
    calc(
      min(var(--mnml--container--max-inline-size), 100%) -
        (2 * var(--mnml--container--padding-inline))
    )
    1fr;
}

.container--grid > * {
  grid-column: 2;
}

.container--grid .full-bleed {
  grid-column: 1 / -1;
}

body > :where(header, main, footer, section),
:where(.site-header, .site-main, .site-footer) {
  padding-block: var(--mnml--spacing);
}

body > header,
.site-header {
  align-items: center;

  &.sticky {
    inset-block-start: 0;
    position: sticky;
    z-index: 10;
  }
}

body > footer,
.site-footer {
  text-align: center;

  &.sticky {
    inset-block-start: 100%;
    position: sticky;
    z-index: 10;
  }
}

.grid,
.grid--vertical {
  column-gap: var(--mnml--grid--column-gap);
  display: grid;
  row-gap: var(--mnml--grid--row-gap);
}

.grid {
  grid-template-columns: repeat(
    auto-fit,
    minmax(var(--mnml--grid--column--min-inline-size), 1fr)
  );
}

.grid--vertical {
  grid-auto-flow: row;
  grid-auto-rows: var(--mnml--grid--row--block-size);
  grid-template-columns: unset;
}
