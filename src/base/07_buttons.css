/* Buttons */

:where(:root, :host) {
  --mnml--button--background-color: hsl(0deg 0% 67%);
  --mnml--button--background-color--hover: hsl(0deg 0% 75%);
  --mnml--button--text-color: hsl(0deg 0% 0%);
  --mnml--button--text-color--hover: hsl(0deg 0% 0%);
  --mnml--button--border-color: transparent;
  --mnml--button--border-color--hover: transparent;
  --mnml--button--border-width: 1pt;
  --mnml--button--border-style: solid;
  --mnml--button--border-radius: 0.25rem;
  --mnml--button--font-family: var(--mnml--font--sans);
  --mnml--button--font-size: 1rem;
  --mnml--button--line-height: 1.4;
  --mnml--button--text-transform: none;
  --mnml--button--padding-block: 0.5rem;
  --mnml--button--padding-inline: 1rem;
  --mnml--button--min-block-size: 3.5rem;
  --mnml--button--display: inline-flex;
  --mnml--button--column-gap: 0;
  --mnml--button--row-gap: 0;
  --mnml--button--disabled--background-color: hsl(0deg 0% 80%);
  --mnml--button--disabled--text-color: hsl(0deg 0% 50%);
  --mnml--button--disabled--border-color: transparent;
}

:where(button, .button) {
  --button--base: var(--mnml--button--background-color);
  --button--base--hover: var(--mnml--button--background-color--hover);
  --button--text-color: var(--mnml--button--text-color);
  --button--text-color--hover: var(--mnml--button--text-color--hover);
  --button--border-width: var(--mnml--button--border-width);
  --button--border-style: var(--mnml--button--border-style);
  --button--border-radius: var(--mnml--button--border-radius);
  --button--display: var(--mnml--button--display);
  --button--font-family: var(--mnml--button--font-family);
  --button--font-size: var(--mnml--button--font-size);
  --button--font-weight: var(--mnml--button--font-weight);
  --button--text-transform: var(--mnml--button--text-transform);
  --button--column-gap: var(--mnml--button--column-gap);
  --button--row-gap: var(--mnml--button--row-gap);
  --button--min-block-size: var(--mnml--button--min-block-size);
  --button--line-height: var(--mnml--button--line-height);
  --button--padding-block: var(--mnml--button--padding-block);
  --button--padding-inline: var(--mnml--button--padding-inline);

  align-items: center;
  background-color: var(--button--base);
  border: var(--button--border-width) var(--button--border-style)
    var(--button--base);
  border-radius: var(--button--border-radius);
  color: var(--button--text-color);
  column-gap: var(--button--column-gap);
  display: var(--button--display);
  font-family: var(--button--font-family);
  font-size: var(--button--font-size, 1rem);
  font-weight: var(--button--font-weight, bold);
  justify-content: center;
  line-height: var(--button--line-height);
  min-block-size: var(--button--min-block-size);
  padding-block: var(--button--padding-block);
  padding-inline: var(--button--padding-inline);
  row-gap: var(--button--row-gap);
  text-align: center;
  text-decoration: none;
  text-transform: var(--button--text-transform);
  transition-duration: var(--mnml--animation-duration);
  transition-property: color, background-color, border-color;

  &:where(:focus-visible) {
    background-color: var(--button--base--hover);
    border-color: var(--button--base--hover);
    color: var(--button--text-color--hover);
  }

  @media (pointer: fine) and (hover: hover) {
    &:where(:hover, :active) {
      background-color: var(--button--base--hover);
      border-color: var(--button--base--hover);
      color: var(--button--text-color--hover);
    }
  }

  &:where(:link) {
    color: var(--button--text-color);
  }

  &:where(.primary, [data-color="primary"]) {
    --button--base: var(--mnml--theme--primary);
    --button--base--hover: var(--mnml--theme--primary--hover);
    --button--text-color: var(--mnml--theme--primary--contrasting);
    --button--text-color--hover: var(
      --mnml--theme--primary--hover--contrasting
    );
  }

  &:where(.secondary, [data-color="secondary"]) {
    --button--base: var(--mnml--theme--secondary);
    --button--base--hover: var(--mnml--theme--secondary--hover);
    --button--text-color: var(--mnml--theme--secondary--contrasting);
    --button--text-color--hover: var(
      --mnml--theme--secondary--hover--contrasting
    );
  }

  &:where(.white, [data-color="white"]) {
    --button--base: hsl(0deg 0% 100%);
    --button--base--hover: hsl(0deg 0% 90.2%);
    --button--text-color: hsl(210deg 10.3% 22.7%);
    --button--text-color--hover: hsl(210deg 10.3% 22.7%);
  }

  &:where(.black, [data-color="black"]) {
    --button--base: hsl(0deg 0% 0%);
    --button--base--hover: hsl(210deg 10.3% 22.7%);
    --button--text-color: hsl(0deg 0% 100%);
    --button--text-color--hover: hsl(0deg 0% 100%);
  }

  &:where(.theme-contrasting, [data-color="theme-contrasting"]) {
    --_hover-mixin-color: white;

    --button--base: var(--mnml--body--background-color--dark);
    --button--base--hover: color-mix(
      in oklab,
      var(--button--base),
      var(--_hover-mixin-color) 10%
    );
    --button--text-color: var(--mnml--body--text-color--dark);
    --button--text-color--hover: var(--mnml--body--text-color--dark);

    &:where(.no-bg, [data-variant~="no-bg"]) {
      --button--text-color: var(--button--base);
      --button--text-color--hover: var(--button--base--hover);
    }

    @media (prefers-color-scheme: dark) {
      :where(:root, :host):not([data-theme~="light"]) & {
        --_hover-mixin-color: black;
        --button--base: var(--mnml--body--background-color--light);

        &:not(:where(.outline, [data-variant~="outline"])) {
          --button--text-color: var(--mnml--body--text-color--light);
          --button--text-color--hover: var(--mnml--body--text-color--light);
        }

        &:where(.outline, [data-variant~="outline"]):where(:focus-visible) {
          --button--text-color: var(--mnml--body--text-color--light);
          --button--text-color--hover: var(--mnml--body--text-color--light);
        }

        &:where(.outline, [data-variant~="outline"]) {
          @media (pointer: fine) and (hover: hover) {
            &:where(:hover, :active) {
              --button-color: var(--button--base--hover);
            }
          }
        }

        &:where(.no-bg, [data-variant~="no-bg"]) {
          --button--text-color: var(--button--base);
          --button--text-color--hover: var(--button--base--hover);
        }
      }
    }
  }

  &:where(.outline, [data-variant~="outline"]) {
    &:where(:not(:hover, :active, :focus-visible)) {
      background-color: transparent;
      border-color: var(--button--base);
      color: var(--button--base);
    }
  }

  &:where(.no-bg, [data-variant~="no-bg"]) {
    --button--text-color: var(--button--base);
    --button--text-color--hover: var(--button--base--hover);

    background-color: transparent;
    border-color: transparent;
  }

  &:where(.inline, [data-variant~="inline"]) {
    background-color: none;
    border-radius: 0;
    border-width: 0;
    color: var(--mnml--link--text-color);
    display: inline;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    min-block-size: 0;
    padding: 0;
    text-align: inherit;
    vertical-align: baseline;

    &:where(:focus-visible) {
      color: var(--mnml--link--text-color--hover);
    }

    @media (pointer: fine) and (hover: hover) {
      &:where(:hover, :active) {
        color: var(--mnml--link--text-color--hover);
      }
    }
  }

  &:where(.rounded, [data-variant~="rounded"]) {
    --button--border-radius: 5rem;
  }

  &:is(:disabled, [disabled]) {
    --button--base: var(--mnml--button--disabled--background-color);
    --button--text-color: var(--mnml--button--disabled--text-color);
    --button--border-color: var(--mnml--button--disabled--border-color);

    cursor: not-allowed;
    pointer-events: none;

    &:where(.outline, [data-variant~="outline"]) {
      background-color: color-mix(
        in oklch,
        var(--button--base),
        transparent 90%
      );
      color: var(--mnml--button--disabled--text-color);
    }
  }

  svg {
    block-size: 1em;
    inline-size: 1em;
  }
}

form {
  :where(button, .button) {
    min-block-size: var(--mnml--input--min-block-size);
  }
}
