/*
 * Inspirations
 * https://www.sarasoueidan.com/blog/focus-indicators/
 * https://css-tricks.com/notes-on-josh-comeaus-custom-css-reset/
 * https://moderncss.dev/pure-css-custom-styled-radio-buttons/
 */

/*
 * Custom media queries
 */

@custom-media --dark-mode (prefers-color-scheme: dark);

/*
 * Reset browser defaults
 */
*:where(:not(iframe, canvas, img, svg, video, dialog):not(svg *)) {
  all: unset;
  cursor: revert;
  display: revert;
  list-style-type: revert;
  resize: revert;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

ol[class],
ul[class] {
  list-style: none;
}

/*
 * a11y
 */

.reader-only:not(:focus):not(:active) {
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  word-wrap: normal !important;
}

.skip-link {
  position: absolute;
  z-index: 1;

  &:focus {
    --link-color--hover: var(--skip-link-color, var(--oc-gray-9, #212529));
    --focus-ring-color: var(--skip-link-bg, var(--oc-yellow-4, #ffd43b));
    --focus-ring-offset: 0;

    background-color: var(--skip-link-bg, var(--oc-yellow-4, #ffd43b));
    left: 5px;
    padding: 1rem;
    top: 5px;
    z-index: 100000;
  }
}

/*
 * Typography & Colors
 */

:where(:root, :host) {
  /* from https://systemfontstack.com */
  --ui-font-sans: ui-sans-serif, -apple-system, BlinkMacSystemFont, avenir next, avenir,
    segoe ui, helvetica neue, helvetica, Ubuntu, roboto, noto, arial, sans-serif;
  --ui-font-serif: ui-serif, Iowan Old Style, Apple Garamond, Baskerville,
    Times New Roman, Droid Serif, Times, Source Serif Pro, serif, Apple Color Emoji,
    Segoe UI Emoji, Segoe UI Symbol;
  --ui-font-monospace: ui-monospace, Menlo, Consolas, Monaco, Liberation Mono,
    Lucida Console, monospace;
  --body-bg: white;
  --body-color: var(--oc-gray-9, black);
  --button-base--default: var(--oc-gray-4, gray);
  --button-base--default--hover: var(--oc-gray-2, silver);
  --button-base--disabled: var(--oc-gray-2, silver);
  --button-color--default: var(--oc-gray-9, black);
  --button-color--disabled: var(--oc-gray-5, #adb5bd);
  --button-border--default: transparent;
  --button-border--disabled: transparent;
  --button-font-family: var(--ui-font-sans);
  --button-padding-block: 0.5rem;
  --button-padding-inline: 1rem;
  --button-radius: 0.25rem;
  --button-text-transform: none;
  --focus-ring-color: 28 126 214;
  --headers-weight: bolder;
  --link-color--hover: var(--oc-blue-6, #228be6);
  --link-color--visited: var(--oc-violet-9, #5f3dc4);
  --link-color: var(--oc-blue-9, #1864ab);
  --selection-bg: var(--oc-yellow-4, #ffd43b);
  --selection-color: var(--oc-gray-9, #212529);
  --input-min-height: 56px;

  color-scheme: light dark;
}

:where(:root, :host)[data-theme~="light"] {
  color-scheme: light;
}

:where(:root, :host)[data-theme~="dark"] {
  color-scheme: dark;
}

@media (--dark-mode) {
  :where(:root, :host):not([data-theme~="light"]) {
    --body-bg: var(--oc-gray-9);
    --body-color: var(--oc-gray-0, white);
    --link-color: var(--oc-blue-4, #4dabf7);
    --link-color--visited: var(--oc-violet-2, #d0bfff);
    --link-color--hover: var(--oc-blue-2, #a5d8ff);
  }
}

::selection {
  background-color: var(--selection-bg);
  color: var(--selection-color);
}

html {
  line-height: 1.15;
  text-size-adjust: none; /* https://css-tricks.com/your-css-reset-needs-text-size-adjust-probably/ */
}

body {
  background-color: var(--body-bg);
  color: var(--body-color);
  font-family: var(--body-font-family, var(--ui-font-sans));
}

:where(a) {
  transition-duration: var(--animation-timing);
  transition-property: color;
  transition-timing-function: ease-out;
  will-change: color;

  &:where(:link) {
    color: var(--link-color);
  }

  &:where(:visited) {
    color: var(--link-color--visited);
  }

  &:where(:hover, :active, :focus) {
    color: var(--link-color--hover);
  }
}

:where(hr) {
  border-top: 1px solid currentColor;
  margin-block: 1rem;
}

a,
button {
  &:where(:focus) {
    outline: 2px solid rgb(var(--focus-ring-color));
    outline-offset: var(--focus-ring-offset, 2px);
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--headers-color, inherit);
  font-family: var(--headers-font-family, var(--ui-font-sans));
  font-weight: var(--headers-weight);
  margin-block-end: var(--spacing);
  margin-block-start: 0;
  margin-inline: auto;
}

p {
  margin-block-end: var(--spacing);
  margin-block-start: 0;
  margin-inline: auto;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-size: 1.5rem;
}

h3 {
  font-size: 1.25rem;
}

h4 {
  font-size: 1rem;
}

h5 {
  font-size: 0.8125rem;
}

h6 {
  font-size: 0.625rem;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
li,
blockquote {
  line-height: calc(1em + 0.5rem);
  overflow-wrap: break-word;
}

ol:not([class]),
ul:not([class]) {
  margin-inline-start: var(--list-inline-spacing, 1.25rem);

  & li + li {
    margin-block-start: var(--spacing);
  }
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: bolder;
}

i,
em {
  font-style: italic;
}

u {
  text-decoration: underline;
}

pre,
code,
kbd,
samp {
  font-family: var(--font-monospace, var(--ui-font-monospace));
  font-size: 1rem;
  white-space: revert;
}

small {
  font-size: 0.8em;
}

sub,
sup {
  font-size: 0.75em;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 1em;
  line-height: 1.15;
}

button {
  cursor: pointer;
}

/*
 * CSS property for animation timings that becomes 0 for folx who don't want animations
 */

:where(:root, :host) {
  --animation-timing: 200ms;
}

@media screen and (prefers-reduced-motion: reduce), (update: slow) {
  :where(:root, :host) {
    --animation-timing: 0s;
  }
}

/*
 * Set some base styles for elements
 */

body {
  margin: 0;
  min-height: 100vh;
  min-height: 100dvh;
}

img {
  border-style: none;
  height: auto;
  max-width: 100%;
}

table {
  border-collapse: collapse;
}

textarea {
  white-space: revert;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

details {
  display: block;
  margin-inline-start: 1rem;
}

summary {
  display: list-item;
}

template,
[hidden] {
  display: none;
}

/*
 * Layout
 */

:where(:root, :host) {
  --spacing: 1rem;
}

.container {
  margin-inline: auto;
  max-width: var(--container-max-width, 1200px);
  padding-inline: var(--spacing);
}

body > :where(header, main, footer, section),
:where(.site-header, .site-main, .site-footer) {
  padding-block: var(--spacing);

  & > .container {
    padding-inline: 0;
  }
}

body > header,
.site-header {
  align-items: center;

  &.sticky {
    position: sticky;
    top: 0;
    z-index: 10;
  }
}

body > footer,
.site-footer {
  text-align: center;

  &.sticky {
    position: sticky;
    top: 100%;
    z-index: 10;
  }
}

.grid,
.grid--vertical {
  display: grid;
  gap: var(--grid-spacing, var(--spacing));
}

.grid {
  grid-template-columns: repeat(
    auto-fit,
    minmax(var(--grid-column-min-width, 200px), 1fr)
  );
}

.grid--vertical {
  grid-auto-flow: row;
  grid-auto-rows: var(--grid-row-height, auto);
  grid-template-columns: unset;
}

/*
 * Forms
 */

form {
  --input-bg: var(--oc-gray-0, white);
  --input-bg--disabled: var(--oc-gray-2, #e9ecef);
  --input-bg--focus: white;
  --input-border-color: var(--oc-gray-1, #f1f3f5);
  --input-border-color--disabled: var(--oc-gray-2, #e9ecef);
  --input-border-color--focus: var(--oc-gray-3, #dee2e6);
  --input-border-width: 1px;
  --input-padding-block: 1rem;
  --input-padding-inline: 1rem;
  --input-radius: 0.25rem;
  --input-text-color: var(--oc-gray-9, black);
  --input-text-color--focus: var(--oc-gray-9, black);
  --input-text-color--disabled: var(--oc-gray-9, black);
  --input-text-size: 1rem;
  --input-file-button-bg: var(--theme-primary, var(--oc-blue-9, blue));
  --input-file-button-color: var(--theme-primary--contrast-color, white);
  --input-file-button-bg--hover: var(--theme-primary--hover, var(--oc-blue-7, blue));
  --input-file-button-color--hover: var(--theme-primary--contrast-color, white);
  --input-focus-ring-opacity: 0.5;
  --input-focus-ring: rgb(var(--focus-ring-color) / var(--input-focus-ring-opacity));
  --input-placeholder-color: #6b737b;
  --help-text-opacity: 0.8;
  --required-color: var(--oc-red-9, inherit);
  --select-arrow: url('data:image/svg+xml,%3csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"%3e%3cpath fill="none" stroke="%23343a40" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2 5l6 6 6-6"/%3e%3c/svg%3e');

  & fieldset {
    & legend {
      font-weight: bolder;
      margin-block-end: var(--spacing);
    }
  }

  & fieldset + fieldset {
    margin-block-start: calc(var(--spacing) * 2);
  }

  & label {
    display: block;
    margin-block-end: 0.25rem;

    &.toggle-label {
      display: grid;
      gap: calc(var(--spacing) * 0.75);
      grid-template-columns: 1em auto;
    }
  }

  & .help {
    display: block;
    font-style: italic;
    margin-block-start: 0.25rem;
    opacity: var(--help-text-opacity);
  }

  & abbr[title~="required" i] {
    color: var(--required-color);
    text-decoration: none;
  }

  & :where(input[type]:not([type="radio"]):not([type="checkbox"]), textarea, select) {
    background-clip: padding-box;
    background: var(--input-bg);
    border: var(--input-border-width) solid var(--input-border-color);
    border-radius: var(--input-radius);
    color: var(--input-text-color);
    display: block;
    font-size: var(--input-text-size);
    min-height: var(--input-min-height);
    padding-block: var(--input-padding-block);
    padding-inline: var(--input-padding-inline);
    transition-duration: var(--animation-timing);
    transition-property: box-shadow, background-color, border-color;
    transition-timing-function: ease-out;
    width: 100%;
    will-change: box-shadow, background-color, border-color;

    &:where(:focus) {
      background-color: var(--input-bg--focus);
      border-color: var(--input-border-color--focus);
      box-shadow: 0 0 0 4px var(--input-focus-ring);
      color: var(--input-text-color--focus);
      outline: none;
    }

    &:where([disabled], [readonly]) {
      border-color: var(--input-border-color--disabled);
      background-color: var(--input-bg--disabled);
      color: var(--input-text-color--disabled);
      opacity: 0.8;
    }

    &:where([disabled]) {
      cursor: not-allowed;
    }

    &::placeholder {
      color: var(--input-placeholder-color);
    }
  }

  & :where(input[type="radio"], input[type="checkbox"]) {
    accent-color: var(--theme-primary, currentColor);
  }

  & input[type="number"].no-arrows {
    -moz-appearance: textfield;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }

  & input[type="file"] {
    overflow: hidden;

    &::file-selector-button,
    &::-webkit-file-upload-button {
      align-items: center;
      background: var(--input-file-button-bg);
      border: 2px solid transparent;
      color: var(--input-file-button-color);
      display: inline-flex;
      filter: brightness(1);
      font-weight: normal;
      justify-content: center;
      margin-block: -1rem;
      margin-inline-start: -1rem;
      margin-inline-end: var(--spacing);
      min-height: 100%;
      padding: 1rem;
      text-align: center;
      transition-duration: var(--animation-timing);
      transition-property: background-color;
      will-change: background-color;
    }

    &:not(:disabled):not([readonly]) {
      &::file-selector-button,
      &::-webkit-file-upload-button {
        cursor: pointer;
      }
    }

    &:where(:hover, :focus) {
      &::file-selector-button,
      &::-webkit-file-upload-button {
        --input-file-button-bg: var(--input-file-button-bg--hover);
        --input-file-button-color: var(--input-file-button-color--hover);
      }
    }
  }

  & select {
    -webkit-appearance: none;
    appearance: none;
    padding-block: var(--input-padding-block);
    padding-inline: var(--input-padding-inline);
    word-wrap: normal;

    &:where(:not([multiple])) {
      background-image: var(--select-arrow);
      background-position: right 0.75rem center;
      background-repeat: no-repeat;
      background-size: 16px 12px;
      padding-inline-end: calc(1.75rem + var(--input-padding-inline));
    }

    &:where([multiple]) {
      overflow-x: hidden;
      overflow-y: scroll;

      & option {
        align-items: center;
        display: flex;
        margin: 0.25rem -0.5rem;
        min-height: 1.5em;
        padding: 0 0.5rem;
      }
    }
  }
}

:where(:root, :host)[dir="rtl"] {
  & form {
    & select {
      background-position: left 0.75rem center;
    }
  }
}

@media (--dark-mode) {
  :where(:root, :host):not([data-theme~="light"]) {
    & form {
      --input-bg: var(--oc-gray-7, #495057);
      --input-bg--disabled: var(--oc-gray-8, #343a40);
      --input-bg--focus: var(--oc-gray-7, #495057);
      --input-border-color: var(--oc-gray-8, #343a40);
      --input-border-color--disabled: var(--oc-gray-8, #343a40);
      --input-border-color--focus: var(--oc-gray-7, #495057);
      --input-focus-ring-opacity: 1;
      --input-placeholder-color: var(--oc-gray-1, #f1f3f5);
      --input-text-color: var(--oc-gray-0, white);
      --input-text-color--disabled: var(--oc-gray-4, #ced4da);
      --input-text-color--focus: var(--oc-gray-0, white);
      --required-color: var(--oc-red-4, inherit);
      --select-arrow: url('data:image/svg+xml,%3csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"%3e%3cpath fill="none" stroke="%23ffffff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2 5l6 6 6-6"/%3e%3c/svg%3e');
    }
  }
}

/*
 * Buttons
 */

:where(button, .button) {
  --button-base: var(--button-base--default);
  --button-base--hover: var(--button-base--default--hover);
  --button-bg: var(--button-base);
  --button-bg--hover: var(--button-base--hover);
  --button-color: var(--button-color--default);
  --button-color--hover: var(--button-color--default);
  --button-border: var(--button-base);
  --button-border--hover: var(--button-base--hover);

  align-items: center;
  background: var(--button-bg);
  border: 2px solid var(--button-border);
  border-radius: var(--button-radius);
  color: var(--button-color);
  display: inline-flex;
  font-family: var(--button-font-family);
  font-weight: var(--button-font-weight, bold);
  justify-content: center;
  min-height: 42px;
  padding: var(--button-padding-block) var(--button-padding-inline);
  text-align: center;
  text-decoration: none;
  text-transform: var(--button-text-transform);
  transition-duration: var(--animation-timing);
  transition-property: color, background-color;
  will-change: color, background-color;

  &:where(:hover, :active, :focus) {
    --button-bg: var(--button-bg--hover);
    --button-color: var(--button-color--hover);
    --button-border: var(--button-border--hover);
  }

  &:where(:link) {
    color: var(--button-color);
  }

  &.no-bg {
    background-color: transparent;
    border-color: transparent;
  }

  &.primary {
    --button-base: var(--theme-primary, --button-base--default);
    --button-base--hover: var(
      --theme-primary--hover,
      var(--theme-primary, --button-base--default)
    );
    --button-color: var(--theme-primary--contrast-color, var(--button-color--default));
  }

  &.secondary {
    --button-base: var(--theme-secondary, --button-base--default);
    --button-base--hover: var(
      --theme-secondary--hover,
      var(--theme-secondary, --button-base--default)
    );
    --button-color: var(
      --theme-secondary--contrast-color,
      var(--button-color--default)
    );
  }

  &.pink {
    --button-base: var(--oc-pink-9, var(--button-base--default));
    --button-base--hover: var(--oc-pink-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.violet {
    --button-base: var(--oc-violet-9, var(--button-base--default));
    --button-base--hover: var(--oc-violet-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.blue {
    --button-base: var(--oc-blue-9, var(--button-base--default));
    --button-base--hover: var(--oc-blue-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.teal {
    --button-base: var(--oc-teal-9, var(--button-base--default));
    --button-base--hover: var(--oc-teal-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.lime {
    --button-base: var(--oc-lime-9, var(--button-base--default));
    --button-base--hover: var(--oc-lime-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.orange {
    --button-base: var(--oc-orange-9, var(--button-base--default));
    --button-base--hover: var(--oc-orange-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.red {
    --button-base: var(--oc-red-9, var(--button-base--default));
    --button-base--hover: var(--oc-red-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.grape {
    --button-base: var(--oc-grape-9, var(--button-base--default));
    --button-base--hover: var(--oc-grape-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.indigo {
    --button-base: var(--oc-indigo-9, var(--button-base--default));
    --button-base--hover: var(--oc-indigo-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.cyan {
    --button-base: var(--oc-cyan-9, var(--button-base--default));
    --button-base--hover: var(--oc-cyan-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.green {
    --button-base: var(--oc-green-9, var(--button-base--default));
    --button-base--hover: var(--oc-green-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.yellow {
    --button-base: var(--oc-yellow-9, var(--button-base--default));
    --button-base--hover: var(--oc-yellow-8, var(--button-base--default--hover));
    --button-color: white;
  }

  &.white {
    --button-base: white;
    --button-base--hover: #e6e6e6;
    --button-color: #343a40;
  }

  &.black {
    --button-base: black;
    --button-base--hover: #343a40;
    --button-color: white;
  }

  &.outline {
    &:where(:not(:hover, :active, :focus)) {
      --button-bg: transparent;
      --button-border: var(--button-base);
      --button-color: var(--button-base);
    }
  }

  &.rounded {
    --button-radius: 5rem;
  }

  &:is(:disabled, [disabled]) {
    --button-base: var(--button-base--disabled);
    --button-color: var(--button-color--disabled);
    --button-border: var(--button-border--disabled);

    cursor: not-allowed;
    pointer-events: none;

    &.outline {
      --button-bg: var(--button-base);
      --button-color: var(--button-color--disabled);
    }
  }
}

form {
  & :where(button, .button) {
    min-height: var(--input-min-height);
  }
}
